module NaiveSet(Value)
exports
  nametype Data = Set(Value)
  data(state) = state
  initialState = {}
  datatype Update = Add.Value | Remove.Value
  nametype Operation = Update
  possible(_) = Operation
  -- TID is opaque transaction ID â€“ probably a clock
  -- apply :: (TID, State, Operation) -> State
  apply(tid, state, Add.n) = union(state, {n})
  apply(tid, state, Remove.n) = diff(state, {n})
  -- transact :: (State, Update) -> (State, Operation)
  transact(state, up) = up
endmodule
